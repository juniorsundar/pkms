@document.meta
title: Control Barrier Functions
description: 
authors: juniorsundar-unikie
categories: 
created: 2024-01-31T14:57:06+0400
updated: 2024-01-31T14:57:06+0400
version: 1.1.1
@end

* Key terms

** Barrier Functions

*** Purpose

    Barrier functions are designed to penalise or discourage solutions that
    violate constraints. They are used in constrained optimsation problems,
    where certain conditions must be satisfied by the solution.

*** How it works

    In essence, a barrier funciton incorporates constraints of optimisation
    problem into objective function. This is done by adding a *penalty term* to
    the objective function that *becomes large as the solution approaches the
    boundary* of the feasible region defined by the constraints.

*** Advantages and Disadvantages

    Barrier functions allow for the conversion of a constrained problem into an
    unconstrained one, simplifying the optimization process.

    However, the choice of barrier function and its parameters can
    significantly impact the convergence and performance of the optimization
    algorithm.

*** Types

    > Given the case of objective $f(x)$ with constraints $|g_i (x) \leq 0|$
    > for $i=1, ..., m$

    The barrier adds a term to the objective function. The purpose is for the
    barrier function to grow as the function approaches the constraint
    boundary.

    ~ *Linear Barrier Function*:
      $|F(x, c) = f(x) + \frac{1}{c} \Sigma_{m}^{i+1} \text{max}(0, g_i(x))|$
    ~ *Quadratic Barrier Function*:
      $|F(x, c) = f(x) + \frac{1}{c^2} \Sigma_{m}^{i+1} \text{max}(0, g_i(x))|$
    ~ *Logarithmic Barrier Function*:
      $|F(x, c) = f(x) + -1 \Sigma_{m}^{i+1} ln(-g_i(x))|$

*** Examples

    *Logarithmic barrier functions*:

    Consider the optimisation problem:

    > Minimise $|f(x) = x^2 \in x \geq 1|$

    Here the constraint can be rewritten as $|g(x) = 1 - x \leq 0|$

    By applying a logarithmic barrier function, the modified objective
    function becomes:

    $|F(x, c) = x^2 - c ln(1-x)|$

    As $x$ approaches 1, the logarithmic term, becomes large, penalising
    solutions near the constraint boundary. In practice, an optimisation
    algorithm would minimise $F(x, c)$ for a sequence of decreasing values of
    $c$, effectively pushing the solution towards the boundary of the feasible
    region while maintaining feasibility.

** Interior Point Methods

*** Purpose

    Algorithms for solving linear and nonlinear optimsation probems. They are
    particularly useful for large-scale optimisation problems, like linear
    programming, quadratic programming and convex optimisation.

*** How it works

    Starting from a point within the interior of the feasibly region (set) and
    iteratively moving towards the solution. This is in contrast to the methods
    like simplex algorithms that operate on boundary of the feasible region.

*** Key Features:

    - *Barrier Functions*: Interior point methods often use barrier functions
      to ensure that the iterations remain within the feasible region. The
      logarithmic barrier function is a common choice.
    - *Polynomial Time Complexity*: These methods have a polynomial time
      complexity, which can make them more efficient for certain large-scale
      problems compared to other methods like the simplex algorithm.
    - *Path-Following Algorithms*: They typically follow a path that is defined
      by a sequence of optimization problems with decreasing values of a
      parameter in the barrier function.

** Lyapunov Function

*** Definition and Purpose

    Lyapunov function is a scalar function that helps to determine stability of
    an equlibrium point in a dynamical system. The function is analogous to a
    potential energy function in physics, where its value represents a measure
    of the system's potential for change.

    They are valuable because they provide a way to prove stability without
    solving system's differential equation directly. Useful if equation is too
    complex to solve analytically.

* Paper - Control Barrier Functions: Theory and Application

  | /Access {https://coogan.ece.gatech.edu/papers/pdf/amesecc19.pdf}[reference]/

** Objective

   > Safety requires that "bad" things do not happen while liveness requires
   > that "good" things eventually happen.

   Asymptotic stability is an example of a liveness property since it is seen
   as "equilibrium is eventually reached".

   Usually Lyapunov functions have played a predominant role in the
   investigation of liveness properties. This paper aims to refocus the
   discussion on safety by introducing control barrier functions that play a
   role equivalent to Lyapunov functions in study of liveness property.

