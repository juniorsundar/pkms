@document.meta
title: 6 March 2024
description: 
authors: juniorsundar
categories: 
created: 2024-01-29T11:08:22+0400
updated: 2024-03-07T00:29:22+0400
version: 1.1.1
@end

* To-Do

** (-) HITL simulation and data collection for system latency

*** (x) Syncup with Yashrajsinh to hash out requirements of the HITL simulation

    - Drone is running
       -- In Hover mode
       -- Take one test in Path mode
    - Recording topics (refer to PPT)
       -- Timestamped and only pertinent data required
    - Fault activation
       -- All 5 sensors
       -- $-\infty$ to 0 to $+\infty$ 
    - Run till failure or set time point
       -- Failure defined by crash, sudden landing, out of bounds
       -- Out of bounds in 2 levels: unacceptable, and failure (1m, 5m)
    - Dump data for analysis

*** (-) Trigger and be able to observe the faults in HITL

    The modules in SITL and HITL are quite different when considering anything
    apart from the IMU. Directly porting the SITL into HITL did not work,
    because the GPS, Magnetometer and Barometer are in different source
    modules.

    Wasn't able to find these modules. I've tried editing the drivers as well,
    but it seems that in HITL, the values being published and observed through
    the ros2 topics aren't reflecting the faults being injected. To expand on
    this, when addingsome type of fault like setting all values of a particular
    sensor to zero, only the resulting deviation is observed in the ros2
    topics. The values aren't actually getting fully set to zero.

*** (-) Set up automated simulation and data collection pipeline

    *RO2 Node Architecture*

    Keep the `drone_controller.py` node for param setting and drone launching.

    Update the `drone_state_monitor.py` node to ensure system remains within
    limits.

    -Need to edit the `fault_manager.py` such that it triggers a fault after a-
    -fixed interval given the sensor that needs to be faulted and the type of-
    -fault it needs to experience:-
    - -All zeros-
    - -All max-

    Due to the straightforward nature of this process, we can bundle up the
    fault activation AND the iteration management into `iteration_manager.py`

    Edit `sensor_recorder_unsync.py` to listen to the below list of topics.
    This needs to narrowed down a bit:
    - sensor_gyro
    - sensor_accel
    - sensor_mag
    - sensor_baro
    - sensor_gps
    - vehicle_angular_velocity
    - vehicle_acceleration
    - vehicle_attitude
    - vehicle_local_position
    - vehicle_global_position
    - actuator_outputs
    - actuator_controls

    *Simulation and Data Collection Management*

    Since it is a one-off deal, there isn't any necessity to set up an
    auto-start, kill and relaunch feature. Manual start and kill is sufficient.

    Write a bash script that, once the simulation in HITL is launched, launches
    above nodes in correct sequence. It should then:
    ~ Ready drone 
    ~ Start data recording
    ~ Trigger fault at fixed time
       -- Put a tag in data collection when fault is triggered
    ~ Stop recording when the drone leaves the boundaries
       -- Also apply a tag when the drone switches from /acceptable/ to
          /unacceptable/ to /failure/
    ~ Dump records to `.csv`
    ~ Reset all applied faults prepare for reset
    ~ Rince and repeat for next fault

** ( ) #RESEARCH Tasks
*** ( ) Is it possible to automate ROS node generation
*** ( ) Rule-Based Decision Engine
*** ( ) Feature Importance Calculation

** (-) Try dumping the fault data as {https://github.com/foxglove/mcap}[MCAP]

   Tested out the process. Currently there is an issue in reading the file and
   converting it from `.mcap` to `.csv` or other human readable format.
   Currently talking with Moamen for that.

*** (-) Write documentation of how this is done

** (-) Dronsole groundwork
*** (-) Continue discussion with Miika to properly understand the redeployment procedure
*** (-) Test out method suggested by Ilkka to run `kubectl` commands directly
*** ( ) Test the DataHub method for obtaining data
**** ( ) Syncup with Moamen as well
*** ( ) Syncup with Ilkka for the swarm NATS implementation

** (-) Plan for Fault Injector Interface

** ( ) #BRAINSTORM Data generation for publication

** ( ) #PERSONAL Implement a basic ROS 2 implementation for swarm controls for Saurabh to test his algorithms

** ( ) Prepare logistics for updating tasks and goal given the meeting with Willian 

   /Reference {:$/journal/2024/03/06:** Technical Syncup / Junior}[here]/

*** ( ) Discuss in meeting with Rayana

** ( ) Add Yashrajsinh to task in Jira

   ===
___

* Journal

  - Wrote {:$/../tgt/index:}[The Good Teacher]
     -- Uploaded {:$/../tgt/volume-6/chapter-413:}[Chapter 413 - The Council's Decision]
     -- Updated {:$/../tgt/volume-6/chapter-426:}[Chapter 426]

     ===
___

* Meetings 

** Technical Syncup / Junior

*** Attendees

    | Junior Sundar
    | Willian Lunardi
    | -Martin Andreoni-

*** Goals

    Discussing state of work

*** Agenda

    - (x) Update progress
    - (x) Discuss issues
    - (x) Plan future

*** Minutes

    - SITL in Cloud
       -- Finland roadblocks
       -- Attempts till now
       -- Possible alternatives and future steps
    - HITL
       -- Progress
       -- Issues

    - Sensor anomalies is kind of a misnomer because the goal is to identify
      more than just misbehaviour of sensors, it is more of a holistic look.
    - To that end, we need to observe more than just sensors, so exposure to
      all the other failure modes is also required.
    - There doesn't seem to be a need to push the simulation to the cloud. A
      local setup is more than sufficient. Moved to 'Action Items'.
    - Goal:
       -- Generating a lot of data for publication.
       -- Running in multiple scenarious with diversity as the main focus.

*** Action Items

    - -( ) #BRAINSTORM Data generation for publication-
    - ( ) Dummy data set output with varying wind
    - -( ) #RESEARCH Feature Importance Calculation-

** RTA Meeting

*** Attendees

    | SRTA-AD
    | | Martin Andreoni
    | | Willian Lunardi
    | | Rayana Boubezari
    | | Junior Sundar

*** Goals

    Syncup with rest of team

*** Agenda

    - (x) Discuss progress
    - (x) Update Jira

*** Minutes

    /Martin Andreoni/
    - Ticky is looking at a top down approach to objective setting. For the
      SRTA team, the goal is to have a demo ready (initial) by July (Q2)
    - Deadlines need to be met, with regards to the weekly reports
    - Before making submissions, make sure to proofread
    - Before sending to review, it is best to have some sort of Confluence page
      that discusses the achievements of the task

    /Dania Herzolla/
    - JamLocator assumes that there is a control channel through which minimal
      message passing is still in place. So even if there is a disconnection by
      jammer, some information can still be passed around

    /Junior Sundar/
    - Add Yashrajsinh as a collaborator in Jira tasks with him

*** Action Items

    - (x) Update Jira and weekly report
    - -( ) Implement a basic ROS 2 implementation for swarm controls for Saurabh-
      -to test his algorithms-
    - -( ) Prepare logistics for updating tasks and goal given the meeting with-
      -{** Technical Syncup / Junior}[Willian]-
       -- -( ) Discuss in meeting with Rayana-

       ===
___

{:$/journal/2024/03/05:}[< previous] - {:$/journal/index:}[index] - {:$/journal/2024/03/07:}[next >]
