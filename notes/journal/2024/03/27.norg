@document.meta
title: 27 March 2024
description: 
authors: juniorsundar
categories: 
created: 2024-01-29T11:08:22+0400
updated: 2024-03-27T23:12:11+0400
version: 1.1.1
@end

* To-Do

** (-) #RESEARCH Tasks
*** (-) Is it possible to automate ROS node generation

** (-) Update Jira
*** (-) RTA-22: Reorient for swarm
**** (-) Adjust Story title accordingly

** (-) Fly-4-Future data collection logistics
*** (x) Confirm who is being sent from Solita side for the data collection event

    Lassi Laiho is being sent from Solita side.

    "Hi @Lassi Laiho, I was made to understand that the following sets of data
    will be collected through each of the flight missions. Could you please
    confirm if this is correct?"

*** (x) Generate list of pertinent data that should be recorded

    - *Drone side*: flight records (topics and logs), drone type and parameters
      (frame type, mass, sensor+actuator parameters)
    - *Environment side*: atmospheric conditions (wind speed, temperature,
      etc.)
    - *Mission side*: mission success/failure (crashes/failures and type of
      failure), mission parameters (task coordinates/objectives)

*** (x) Confirm if this data is being recorded within DataHub
*** (-) Talk to Yapa about additional data collection

** (-) Data Generation Task
*** (x) {:$/journal/2024/03/20:****  Literature review}[Literature review]
*** (x) Generate plan of action
**** (x) Figure out how to make a {:$/technical/px4/simulation:** Containerised Deployment}[Containerised Deployment]
**** (x) Figure out how to set up ROS in a containerised environment
***** (x) Launch ROS in containerised environment
***** (x) Clone and build ROS 2 workspace into containerised environment
***** (x) Be able to run {:$/technical/px4/px4:* Dockerised ROS 2 CLI}[Dockerised ROS 2 CLI] as well as launch all the built nodes
***** (x) The `.bag` files need to be obtainable as well

      We may need to be able to dump the bags `.mcap` format. So this means
      that a drive needs to be mounted and exposed when launching the
      container.

**** (x) Install and set up mechanism to convert log files.

     *NOTE* that the rate at which data is being recorded is throttled

**** (x) Formalise a PoA

     The goal is to generate data sets that are diverse, and sufficiently large
     to be able to train and test models.

     In deployment, the experiment environment must be able to run simulations
     and record data /ad inifinitum/ given a preset list of parameters.

     The simulation may cycle through a preset list of movement tasks, or it
     may generate a randomised movement task.

     The simulation will start and end with each iteration for thorough safety
     during deployment.
     - Parameters will be cleansed to remove all faults before the simulation
       is killed.
     - Data will be recorded in bags, and all pertinent topics will be dumped.
     - ULOG file must also be copied over.
     - Fault data must also be copied over (time of injection, type, etc.).

     To that end, the following prerequisites are important to get fully set up:
     ~ ROS bags being recorded as `.mcap` files and being dumped somewhere safe.
     ~ ROS nodes to initiate rosbag records when trigger is received.
     ~ Mission controller node to handle generating executing missions.
     ~ Fault handler to trigger and record faults.
     ~ Drone state monitor that checks if the drone is functioning. If crash,
       then crash time needs to be recorded.

     *How to handle when the mission starts and finishes?*

     This is necessary for segregating the bag files, and also to manage the
     sequencing for continuous mission records.

     ? We could use the termination of the mission thread to signify a end of
     mission.
     ? Should we resort to end of mission in all chases? Even if there is a
     crash?

     Mission finishes normally -->
     - run through normal cleanup sequence
     - restart simulation.

     Drone crashes -->
     - trigger a preempt on the requesting thread
     - run cleanup sequence
     - restart simulation

*** (-) Setup simulation and data collection system in local machine
*** ( ) Run test batch

** ( ) Send the data heards to Willian

** ( ) Update 'DataHub F4F Visit Plan' on Confluence with the required topics

   ===
___

* Journal


  ===
___

* Meetings

** SRTA-MLOps Timeline and Responsibility Discussion

*** Attendees

    | SRTA-AD
    | Solita

*** Goals

    Establish timelines and deadlines for Q1-Q4

*** Agenda

    - (x) Establish timeline
    - (x) Expectations and responsibilities
    - (x) Demos
    - (x) Sync-up

*** Minutes

    Demo is on June Q2

    SRTA focus work on MLOps

    Safety dashboard is WIP near completion for demo

    Decision module work has started

    MLFlow instance has been deployed to cloud --> being tested

    Broken propeller vs. battery monitor for demo (feasibility)
    - Hard to collect data for broken propeller and implement RTA modules.
    - Battery monitor is easier to implement and demo for time being.

    The template for RTA plugins is under development

    *June Demo Focus*
    - FMO with safety dashboard
    - SRTA core components
    - Integration of safe landing spot detection action with segmentation model
    - Maybe fault injection?

    Supervisor architecture will replace RTA worker switch
    Support for VTOL and fixed-wing UAVs is incoming

*** Action Items

    Sync-up with Jarmo later if there is a need for fault injection to be
    demoed

** Sync on Prague Data Collection

*** Attendees

    | Moamen Ibrahi
    | Lassi Laiho
    | Junior Sundar

*** Goals

    - Determine which method to record data from the flight tests

*** Agenda

    - Determine what all data can be recorded
    - What about swarm?
    - DataHub stuff too!

*** Minutes

    Turns out no one knows shit!

    The data for the flight can only be recorded from rostopics, nothing else
    is in place at the moment

*** Action Item

    - (x) -Ping Rodolfo asking who the go to person is to answer your damn questions-

    ===
___

{:$/journal/2024/03/26:}[< previous] - {:$/journal/index:}[index] - {:$/journal/2024/03/28:}[next >]
